# Using the Docker Command Line
# 
# Step 1: Create a network
# 

docker network create moodle-network

# 
# Step 2: Create a volume for MariaDB persistence and create a MariaDB container
# 

docker volume create --name mariadb_data

# 

# docker run -d --name mariadb \
#   --env ALLOW_EMPTY_PASSWORD=yes \
#   --env MARIADB_USER=bn_moodle \
#   --env MARIADB_PASSWORD=bitnami \
#   --env MARIADB_DATABASE=bitnami_moodle \
#   --network moodle-network \
#   --volume mariadb_data:/bitnami/mariadb \
#   bitnami/mariadb:latest

docker run -d --name mariadb `
  --env ALLOW_EMPTY_PASSWORD=yes `
  --env MARIADB_USER=bn_moodle `
  --env MARIADB_PASSWORD=bitnami `
  --env MARIADB_DATABASE=bitnami_moodle `
  --volume mariadb_data:/bitnami/mariadb `
  --network moodle-network `
  bitnami/mariadb:latest

# Create the database users and schema



# 
# Step 3: Create volumes for Moodleâ„¢ persistence and launch the container
# 

docker volume create --name moodle_data
# 

# docker run -d --name moodle \
#   -p 8080:8080 -p 8443:8443 \
#   --env ALLOW_EMPTY_PASSWORD=yes \
#   --env MOODLE_DATABASE_USER=bn_moodle \
#   --env MOODLE_DATABASE_PASSWORD=bitnami \
#   --env MOODLE_DATABASE_NAME=bitnami_moodle \
#   --network moodle-network \
#   --volume moodle_data:/bitnami/moodle \
#   --volume moodledata_data:/bitnami/moodledata \
#   bitnami/moodle:latest

docker run -d --name moodle `
  -p 8080:8080 -p 8443:8443 `
  --env ALLOW_EMPTY_PASSWORD=yes `
  --env MOODLE_DATABASE_USER=bn_moodle `
  --env MOODLE_DATABASE_PASSWORD=bitnami `
  --env MOODLE_DATABASE_NAME=bitnami_moodle `
  --volume moodledata_data:/bitnami/moodledata `
  --network moodle-network `
  bitnami/moodle:latest



# Docker command to start ambrosektal/golang-dev:20240515 with volumes mounted at /app, and /root/.vscode-server/extensions
docker run -d -it --rm -v D:\\Volumes\\golang\\Projects:/app -v D:\\Volumes\\golang\\vscode-server\\extensions:/root/.vscode-server/extensions ambrosektal/golang-dev:20240515


############################
# Linux

# Docker command to start ambrosektal/golang-dev:20240515 with volumes mounted at /app, and /root/.vscode-server/extensions
docker run -d --name golang_dev -it --rm -v /home/ambrose/volumes/golang/Projects:/app -v /home/ambrose/volumes/golang/Projects/vscode-server/extensions:/root/.vscode-server/extensions ambrosektal/golang-dev:20240522

# Docker command to start node with volumes mounted at /app, and /root/.vscode-server/extensions
docker run -d -it --rm -v ~/volumes/node/Projects:/app -v ~/volumes/node/Projects/vscode-server/extensions:/root/.vscode-server/extensions node:latest



# Docker command to start ambrosektal/node@latest for pulling updated node packages from local verdaccio
# docker run -d -it --rm ambrosektal/nodetemp:latest bash
docker run -it --rm -v ~/TheRum:/root/TheRum ambrosektal/nodetemp:latest bash



